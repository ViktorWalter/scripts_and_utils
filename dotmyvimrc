if has('nvim')
  :tnoremap <Esc> <C-\><C-n>
endif

"OpenCL syntax
Plug 'int3h/vim-opencl', {'for': 'cl'}

if g:user_mode == "1"
  " colorscheme jellybeans
  map <Leader>d :redraw!<CR>
  set mef="/tmp/vim##.err"
  map <Leader>m :w\|silent make\|redraw!\|cc<CR>
  ":w<CR>:call VimuxRunCommand("cd ~/ros_workspace; clear; catkin_make --pkg zedhack")<CR>
  " jump to build split
  "map <Leader>M :call VimuxInspectRunner()<CR>
  " close the vimmux window
  map <Leader>l :ccl<CR>
  " building ctags
  "command! MakeTags :call VimuxRunCommand("generateTags; :q")<CR>
  "
  """""""""""""""""""""""""""""""

  " customize bookmarks in startify
  let g:startify_bookmarks = [
        \ { 'b': '~/.bashrc' },
        \ { 'v': '~/.vimrc' },
        \ { 'p': '~/git/linux-setup/appconfig/vim/startify_quotes.txt' },
        \ ]

    colorscheme jellybeans " JELLYBEANS COLOR_SCHEME ACTIVE 
    " colorscheme raggi " LIGHT COLOR_SCHEME 

  au BufNewFile,BufRead *.cl setlocal ft=c

  au BufNewFile,BufRead *.tex map <Leader>m :w<CR>:VimtexCompile<CR>
  au BufNewFile,BufRead *.tex map <Leader>. :w<CR>:VimtexView<CR>
  au BufNewFile,BufRead *.tex setlocal spell spelllang=en_us
  au BufNewFile,BufRead *.tex setlocal wrap
  au BufNewFile,BufRead *.tex setlocal ft=tex
  let g:tex_comment_nospell= 1
  au BufNewFile,BufRead *.tex setlocal fdm=expr
  au BufNewFile,BufRead *.tex setlocal foldexpr=vimtex#fold#level(2)
  au BufNewFile,BufRead *.tex set lazyredraw
  set nowrap

  set path+=**
  set wildmenu
  unmap <S-J>
  unmap <S-K>
  " set lazyredraw "makes scrooling faster
  set cursorline
  set cursorcolumn

  " Write into protected file without prior sudo
  cmap w!! w !sudo tee >dev/null %
  let @t = '!!toilet -f big'
  highlight ColorColumn ctermbg=magenta
  call matchadd('ColorColumn', '\%81v',100)
  hi Normal guibg=NONE ctermbg=NONE
  hi NonText guibg=NONE ctermbg=NONE

  hi TabLineSel ctermbg=45
  " hi TabLineFill ctermbg=45
  hi TabLine ctermbg=0 ctermfg=45
  " hi Title ctermbg=45

  function PrepMatlab()
    let b:matlabPane=system("tmux list-panes -F '#{pane_current_command} #{session_name} #{window_index} #{pane_id}' |awk '/MATLAB/ {printf \"%s\:%s.%s\",$2,$3,$4}'")
    if b:matlabPane == ""
      let b:matlabPane=system(" tmux split-window -h \"cd `pwd`; MATLAB -nodesktop -nosplash\";sleep 2; tmux last-pane; tmux list-panes -F '#{pane_current_command} #{session_name} #{window_index} #{pane_id}' |awk '/MATLAB/ {printf \"%s\:%s.%s\",$2,$3,$4}'")
    end
    let b:matlabRun="tmux send-keys -t ".escape(b:matlabPane,'%')." \"run ".expand('%')."\" Enter"
    " let b:matlabRun=&makeprg
    return b:matlabRun
  endfunction
  au BufNewFile,BufRead,BufEnter *.m let &makeprg=PrepMatlab()

  function MatlabSendCommand()
    '<,'>y m
    let b:matlabPane=system("tmux list-panes -F '#{pane_current_command} #{session_name} #{window_index} #{pane_id}' |awk '/MATLAB/ {printf \"%s\:%s.%s\",$2,$3,$4}'")
    if b:matlabPane == ""
      let b:matlabPane=system(" tmux split-window -h \"cd `pwd`; MATLAB -nodesktop -nosplash\";sleep 2; tmux last-pane; tmux list-panes -F '#{pane_current_command} #{session_name} #{window_index} #{pane_id}' |awk '/MATLAB/ {printf \"%s\:%s.%s\",$2,$3,$4}'")
    end
    let b:matlabSend="tmux send-keys -t ".escape(b:matlabPane,'%')." \"".substitute(escape(@m, '\\/*$~'), '\n','\" Enter \"', 'g')."\" Enter"
    silent execute(":!".b:matlabSend)
    redraw!
    echo b:matlabSend
  endfunction
  map <Leader>s :call MatlabSendCommand()<CR>

  function PrepRos()
    python3 << EOS
try:
   import rospkg
   import vim
except ImportError:
   vim.command("let is_ros='N/A'")
pkgname = rospkg.get_package_name(vim.eval("expand('%:p')"))
if pkgname:
   r = rospkg.RosPack()
   vim.command("let is_ros='true'")
   vim.command("cd "+r.get_path(pkgname))
   vim.command("let &makeprg='catkin build "+pkgname+"'")
else:
   vim.command("let is_ros='false'")
EOS
    if is_ros == "true"
      set efm=%f:%l:%c:\ error:%m
    endif
  endfunction
  au BufNewFile,BufRead,BufEnter *.cpp,*h,*hpp call PrepRos()

  let g:lightline = {
        \ 'colorscheme': 'wombat',
        \ }

  hi StartifyHeader ctermfg=39 cterm=bold
  hi StartifyFooter ctermfg=39 cterm=bold
  hi Normal ctermfg=39
endif
